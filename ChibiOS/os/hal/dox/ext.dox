/*
    ChibiOS - Copyright (C) 2006..2016 Giovanni Di Sirio

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
*/

/**
 * @defgroup EXT EXT Driver
 * @brief   Generic EXT Driver.
 * @details This module implements a generic EXT (EXTernal) driver.
 * @pre     In order to use the EXT driver the @p HAL_USE_EXT option
 *          must be enabled in @p halconf.h.
 *
 * @section ext_1 Driver State Machine
 * The driver implements a state machine internally, not all the driver
 * functionalities can be used in any moment, any transition not explicitly
 * shown in the following diagram has to be considered an error and shall
 * be captured by an assertion (if enabled).
 * @if LATEX_PDF
 * @dot
  digraph example {
    size="5, 7";
    rankdir="LR";

    node [shape=circle, fontname=Sans, fontsize=8, fixedsize="true", width="0.9", height="0.9"];
    edge [fontname=Sans, fontsize=8];

    uninit [label="EXT_UNINIT", style="bold"];
    stop  [label="EXT_STOP\nLow Power"];
    active [label="EXT_ACTIVE"];

    uninit -> stop [label="extInit()"];
    stop -> stop [label="\nextStop()"];
    stop -> active [label="\nextStart()"];
    active -> stop [label="\nextStop()"];
    active -> active [label="\nextStart()"];
  }
 * @enddot
 * @else
 * @dot
  digraph example {
    rankdir="LR";

    node [shape=circle, fontname=Sans, fontsize=8, fixedsize="true", width="0.9", height="0.9"];
    edge [fontname=Sans, fontsize=8];

    uninit [label="EXT_UNINIT", style="bold"];
    stop  [label="EXT_STOP\nLow Power"];
    active [label="EXT_ACTIVE"];

    uninit -> stop [label="extInit()"];
    stop -> stop [label="\nextStop()"];
    stop -> active [label="\nextStart()"];
    active -> stop [label="\nextStop()"];
    active -> active [label="\nextStart()"];
  }
 * @enddot
 * @endif
 *
 * @section ext_2 EXT Operations.
 * This driver abstracts generic external interrupt sources, a callback
 * is invoked when a programmable transition is detected on one of the
 * configured channels. Several channel modes are possible.
 * - <b>EXT_CH_MODE_DISABLED</b>, channel not used.
 * - <b>EXT_CH_MODE_RISING_EDGE</b>, callback on a rising edge.
 * - <b>EXT_CH_MODE_FALLING_EDGE</b>, callback on a falling edge.
 * - <b>EXT_CH_MODE_BOTH_EDGES</b>, callback on a both edges.
 * .
 * @ingroup HAL_NORMAL_DRIVERS
 */
